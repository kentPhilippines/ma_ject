<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.payProject.manage.mapper.BackBankAmountMapper" >
  <resultMap id="BaseResultMap" type="com.payProject.manage.entity.BackBankAmount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="accountId" property="accountId" jdbcType="VARCHAR" />
    <result column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="approver" property="approver" jdbcType="VARCHAR" />
    <result column="bankR" property="bankR" jdbcType="VARCHAR" />
    <result column="BankD" property="bankD" jdbcType="VARCHAR" />
    <result column="bankStatus" property="bankStatus" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="submitSystem" property="submitSystem" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="retain1" property="retain1" jdbcType="VARCHAR" />
    <result column="retain2" property="retain2" jdbcType="VARCHAR" />
    <result column="retain3" property="retain3" jdbcType="VARCHAR" />
    <result column="retain4" property="retain4" jdbcType="VARCHAR" />
    <result column="retain5" property="retain5" jdbcType="VARCHAR" />
    <result column="retain6" property="retain6" jdbcType="VARCHAR" />
    <result column="retain7" property="retain7" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.payProject.manage.entity.BackBankAmount" extends="BaseResultMap" >
    <result column="note" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, accountId, orderId, amount, ip, approver, bankR, BankD, bankStatus, createTime, 
    submitTime, submitSystem, status, retain1, retain2, retain3, retain4, retain5, retain6, 
    retain7
  </sql>
  <sql id="Blob_Column_List" >
    note
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.payProject.manage.entity.BackBankAmountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from manage_backbank_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.payProject.manage.entity.BackBankAmountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from manage_backbank_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from manage_backbank_amount
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manage_backbank_amount
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.payProject.manage.entity.BackBankAmountExample" >
    delete from manage_backbank_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payProject.manage.entity.BackBankAmount" useGeneratedKeys="true" keyProperty="id" >
    insert into manage_backbank_amount (accountId, orderId, amount, 
      ip, approver, bankR, 
      BankD, bankStatus, createTime, 
      submitTime, submitSystem, status, 
      retain1, retain2, retain3, 
      retain4, retain5, retain6, 
      retain7, note)
    values (#{accountId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{ip,jdbcType=VARCHAR}, #{approver,jdbcType=VARCHAR}, #{bankR,jdbcType=VARCHAR}, 
      #{bankD,jdbcType=VARCHAR}, #{bankStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{submitTime,jdbcType=TIMESTAMP}, #{submitSystem,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{retain1,jdbcType=VARCHAR}, #{retain2,jdbcType=VARCHAR}, #{retain3,jdbcType=VARCHAR}, 
      #{retain4,jdbcType=VARCHAR}, #{retain5,jdbcType=VARCHAR}, #{retain6,jdbcType=VARCHAR}, 
      #{retain7,jdbcType=VARCHAR}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.payProject.manage.entity.BackBankAmount" useGeneratedKeys="true" keyProperty="id" >
    insert into manage_backbank_amount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        accountId,
      </if>
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="approver != null" >
        approver,
      </if>
      <if test="bankR != null" >
        bankR,
      </if>
      <if test="bankD != null" >
        BankD,
      </if>
      <if test="bankStatus != null" >
        bankStatus,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="submitTime != null" >
        submitTime,
      </if>
      <if test="submitSystem != null" >
        submitSystem,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="retain1 != null" >
        retain1,
      </if>
      <if test="retain2 != null" >
        retain2,
      </if>
      <if test="retain3 != null" >
        retain3,
      </if>
      <if test="retain4 != null" >
        retain4,
      </if>
      <if test="retain5 != null" >
        retain5,
      </if>
      <if test="retain6 != null" >
        retain6,
      </if>
      <if test="retain7 != null" >
        retain7,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="approver != null" >
        #{approver,jdbcType=VARCHAR},
      </if>
      <if test="bankR != null" >
        #{bankR,jdbcType=VARCHAR},
      </if>
      <if test="bankD != null" >
        #{bankD,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null" >
        #{bankStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitSystem != null" >
        #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="retain1 != null" >
        #{retain1,jdbcType=VARCHAR},
      </if>
      <if test="retain2 != null" >
        #{retain2,jdbcType=VARCHAR},
      </if>
      <if test="retain3 != null" >
        #{retain3,jdbcType=VARCHAR},
      </if>
      <if test="retain4 != null" >
        #{retain4,jdbcType=VARCHAR},
      </if>
      <if test="retain5 != null" >
        #{retain5,jdbcType=VARCHAR},
      </if>
      <if test="retain6 != null" >
        #{retain6,jdbcType=VARCHAR},
      </if>
      <if test="retain7 != null" >
        #{retain7,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payProject.manage.entity.BackBankAmountExample" resultType="java.lang.Integer" >
    select count(*) from manage_backbank_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update manage_backbank_amount
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        accountId = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        orderId = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.approver != null" >
        approver = #{record.approver,jdbcType=VARCHAR},
      </if>
      <if test="record.bankR != null" >
        bankR = #{record.bankR,jdbcType=VARCHAR},
      </if>
      <if test="record.bankD != null" >
        BankD = #{record.bankD,jdbcType=VARCHAR},
      </if>
      <if test="record.bankStatus != null" >
        bankStatus = #{record.bankStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitTime != null" >
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitSystem != null" >
        submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.retain1 != null" >
        retain1 = #{record.retain1,jdbcType=VARCHAR},
      </if>
      <if test="record.retain2 != null" >
        retain2 = #{record.retain2,jdbcType=VARCHAR},
      </if>
      <if test="record.retain3 != null" >
        retain3 = #{record.retain3,jdbcType=VARCHAR},
      </if>
      <if test="record.retain4 != null" >
        retain4 = #{record.retain4,jdbcType=VARCHAR},
      </if>
      <if test="record.retain5 != null" >
        retain5 = #{record.retain5,jdbcType=VARCHAR},
      </if>
      <if test="record.retain6 != null" >
        retain6 = #{record.retain6,jdbcType=VARCHAR},
      </if>
      <if test="record.retain7 != null" >
        retain7 = #{record.retain7,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update manage_backbank_amount
    set id = #{record.id,jdbcType=INTEGER},
      accountId = #{record.accountId,jdbcType=VARCHAR},
      orderId = #{record.orderId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      ip = #{record.ip,jdbcType=VARCHAR},
      approver = #{record.approver,jdbcType=VARCHAR},
      bankR = #{record.bankR,jdbcType=VARCHAR},
      BankD = #{record.bankD,jdbcType=VARCHAR},
      bankStatus = #{record.bankStatus,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      retain1 = #{record.retain1,jdbcType=VARCHAR},
      retain2 = #{record.retain2,jdbcType=VARCHAR},
      retain3 = #{record.retain3,jdbcType=VARCHAR},
      retain4 = #{record.retain4,jdbcType=VARCHAR},
      retain5 = #{record.retain5,jdbcType=VARCHAR},
      retain6 = #{record.retain6,jdbcType=VARCHAR},
      retain7 = #{record.retain7,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update manage_backbank_amount
    set id = #{record.id,jdbcType=INTEGER},
      accountId = #{record.accountId,jdbcType=VARCHAR},
      orderId = #{record.orderId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      ip = #{record.ip,jdbcType=VARCHAR},
      approver = #{record.approver,jdbcType=VARCHAR},
      bankR = #{record.bankR,jdbcType=VARCHAR},
      BankD = #{record.bankD,jdbcType=VARCHAR},
      bankStatus = #{record.bankStatus,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      retain1 = #{record.retain1,jdbcType=VARCHAR},
      retain2 = #{record.retain2,jdbcType=VARCHAR},
      retain3 = #{record.retain3,jdbcType=VARCHAR},
      retain4 = #{record.retain4,jdbcType=VARCHAR},
      retain5 = #{record.retain5,jdbcType=VARCHAR},
      retain6 = #{record.retain6,jdbcType=VARCHAR},
      retain7 = #{record.retain7,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payProject.manage.entity.BackBankAmount" >
    update manage_backbank_amount
    <set >
      <if test="accountId != null" >
        accountId = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        orderId = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="approver != null" >
        approver = #{approver,jdbcType=VARCHAR},
      </if>
      <if test="bankR != null" >
        bankR = #{bankR,jdbcType=VARCHAR},
      </if>
      <if test="bankD != null" >
        BankD = #{bankD,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null" >
        bankStatus = #{bankStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitSystem != null" >
        submitSystem = #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="retain1 != null" >
        retain1 = #{retain1,jdbcType=VARCHAR},
      </if>
      <if test="retain2 != null" >
        retain2 = #{retain2,jdbcType=VARCHAR},
      </if>
      <if test="retain3 != null" >
        retain3 = #{retain3,jdbcType=VARCHAR},
      </if>
      <if test="retain4 != null" >
        retain4 = #{retain4,jdbcType=VARCHAR},
      </if>
      <if test="retain5 != null" >
        retain5 = #{retain5,jdbcType=VARCHAR},
      </if>
      <if test="retain6 != null" >
        retain6 = #{retain6,jdbcType=VARCHAR},
      </if>
      <if test="retain7 != null" >
        retain7 = #{retain7,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.payProject.manage.entity.BackBankAmount" >
    update manage_backbank_amount
    set accountId = #{accountId,jdbcType=VARCHAR},
      orderId = #{orderId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      ip = #{ip,jdbcType=VARCHAR},
      approver = #{approver,jdbcType=VARCHAR},
      bankR = #{bankR,jdbcType=VARCHAR},
      BankD = #{bankD,jdbcType=VARCHAR},
      bankStatus = #{bankStatus,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{submitSystem,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      retain1 = #{retain1,jdbcType=VARCHAR},
      retain2 = #{retain2,jdbcType=VARCHAR},
      retain3 = #{retain3,jdbcType=VARCHAR},
      retain4 = #{retain4,jdbcType=VARCHAR},
      retain5 = #{retain5,jdbcType=VARCHAR},
      retain6 = #{retain6,jdbcType=VARCHAR},
      retain7 = #{retain7,jdbcType=VARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payProject.manage.entity.BackBankAmount" >
    update manage_backbank_amount
    set accountId = #{accountId,jdbcType=VARCHAR},
      orderId = #{orderId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      ip = #{ip,jdbcType=VARCHAR},
      approver = #{approver,jdbcType=VARCHAR},
      bankR = #{bankR,jdbcType=VARCHAR},
      BankD = #{bankD,jdbcType=VARCHAR},
      bankStatus = #{bankStatus,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{submitSystem,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      retain1 = #{retain1,jdbcType=VARCHAR},
      retain2 = #{retain2,jdbcType=VARCHAR},
      retain3 = #{retain3,jdbcType=VARCHAR},
      retain4 = #{retain4,jdbcType=VARCHAR},
      retain5 = #{retain5,jdbcType=VARCHAR},
      retain6 = #{retain6,jdbcType=VARCHAR},
      retain7 = #{retain7,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>